server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # DNS resolver for dynamic upstream (allows nginx to start even if backend is not available)
    resolver 127.0.0.11 valid=30s ipv6=off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # API proxy (when accessed directly, not through Caddy)
    # Returns 404 if backend is not available (for standalone tests)
    location /api {
        set $backend "web-ui-backend:8787";
        proxy_pass http://$backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        error_page 502 503 504 =404 /404.html;
    }

    # SPA fallback - serve index.html for all routes
    # Note: Caddy strips /ui/ prefix before proxying to nginx
    location / {
        try_files $uri $uri/ /index.html;
    }
}
